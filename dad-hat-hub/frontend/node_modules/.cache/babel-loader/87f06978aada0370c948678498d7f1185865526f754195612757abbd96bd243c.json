{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nimro\\\\Downloads\\\\BusinessProjects\\\\Dad Hat Hub\\\\dad-hat-hub\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      setCart(cart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = productId => {\n    setCart(cart.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const getTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      // Make sure to include updateQuantity here\n      getTotalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","addToCart","product","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","updateQuantity","newQuantity","prevCart","getTotalPrice","reduce","total","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nimro/Downloads/BusinessProjects/Dad Hat Hub/dad-hat-hub/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n    const existingItem = cart.find((item) => item.id === product.id);\r\n\r\n    if (existingItem) {\r\n      setCart(\r\n        cart.map((item) =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setCart([...cart, { ...product, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(cart.filter((item) => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item.id === productId\r\n          ? { ...item, quantity: newQuantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity, // Make sure to include updateQuantity here\r\n        getTotalPrice,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,YAAY,GAAGJ,IAAI,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAEhE,IAAIH,YAAY,EAAE;MAChBH,OAAO,CACLD,IAAI,CAACQ,GAAG,CAAEF,IAAI,IACZA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAE,GAAGD,IAAI;QAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;MAAE,CAAC,GACxCH,IACN,CACF,CAAC;IACH,CAAC,MAAM;MACLL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGG,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpCV,OAAO,CAACD,IAAI,CAACY,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,cAAc,GAAGA,CAACF,SAAS,EAAEG,WAAW,KAAK;IACjDb,OAAO,CAAEc,QAAQ,IACfA,QAAQ,CAACP,GAAG,CAAEF,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKI,SAAS,GACjB;MAAE,GAAGL,IAAI;MAAEG,QAAQ,EAAEK;IAAY,CAAC,GAClCR,IACN,CACF,CAAC;EACH,CAAC;EAED,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAOhB,IAAI,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEZ,IAAI,KAAKY,KAAK,GAAGZ,IAAI,CAACa,KAAK,GAAGb,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;EAC5E,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MACLrB,IAAI;MACJE,SAAS;MACTQ,cAAc;MACdG,cAAc;MAAE;MAChBG;IACF,CAAE;IAAAlB,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CAlDWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAoDzB,eAAeH,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}